@using ModelView;
@using System.Collections.Generic;
@model Pagination<Product>;
@{
    Layout = "_UserLayout";
    decimal pageNumbers = Math.Ceiling((decimal)Model.Total / Model.PageCount);
    int to = Model.Total < Model.PageNum * Model.PageCount ? Model.Total : Model.PageNum * Model.PageCount;
    int from = ((Model.PageNum - 1) * Model.PageCount) + 1;
    bool CanMoveNext = Model.PageNum < pageNumbers;
    bool CanMoveBack = Model.PageNum - 1 > 0;
}
<div><p>@from : @to ----  @Model.Total</p></div>

<form class="row g-3 needs-validation" asp-action="getall" asp-controller="product" method="get" >
  <div class="col-md-4">
    <label for="validationCustom01" class="form-label">Product Name</label>
        <input type="text" class="form-control" name="productName" id="validationCustom01"  >

  </div>

  <div class="col-md-4">
    <label for="validationCustomUsername" class="form-label">Price</label>
    <div class="input-group has-validation">
      <span class="input-group-text" id="inputGroupPrepend"></span>
            <input type="number" class="form-control" name="price" id="validationCustomUsername" aria-describedby="inputGroupPrepend">
    </div>
  </div>

    <div class="col-12">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="true" id="invalidCheck" name="IsAscending">
            <label class="form-check-label" for="invalidCheck">
                Order Ascending
            </label>

        </div>
    </div>

    <input type="hidden" name="PageNumber" value="@Model.PageNum" />

  <div class="col-12">
    <button class="btn btn-primary" type="submit">Filter</button>
  </div>

</form>




<div class="container w-75 m-auto d-flex flex-wrap justify-content-evenly">
    @if (ViewData["products"]!=null) { 
        @foreach (Product item in ViewData["products"] as List<Product>)
{
           
            <partial name="_productview" model="@item" />
}
}

   

</div>


<div class="container d-flex justify-content-between">
    @if (CanMoveBack)
    {
        <button type="button" class="btn btn-dark" onclick="paginate('back')">Back</button>
    }

  
    @if (CanMoveNext)
    {
        <button type="button" class="btn btn-dark" onclick="paginate('next')">Next</button>
    }

</div>

@section Scripts{
    <script>
        let form = document.getElementsByTagName("form")[0];

        function paginate(val) {
            let page = 0;
            if (val == "back") {
                page = @Model.PageNum - 1;

            } else {
                page = @Model.PageNum + 1;

            }

            form.PageNumber.value = page;
                console.log(page);
                console.log(@Model.PageNum)

                console.log(val)
                form.submit();

        }

      
    </script>
}



